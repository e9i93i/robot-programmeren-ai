{"README.md":"\n> Open this page at [https://daanzap.github.io/robot-control/](https://daanzap.github.io/robot-control/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/daanzap/robot-control** and import\n\n## Edit this project ![Build status badge](https://github.com/daanzap/robot-control/workflows/MakeCode/badge.svg)\n\nTo edit this repository in MakeCode.\n\n* open [https://makecode.microbit.org/](https://makecode.microbit.org/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/daanzap/robot-control** and click import\n\n## Blocks preview\n\nThis image shows the blocks code from the last commit in master.\nThis image may take a few minutes to refresh.\n\n![A rendered view of the blocks](https://github.com/daanzap/robot-control/raw/master/.github/makecode/blocks.png)\n\n#### Metadata (used for search, rendering)\n\n* for PXT/microbit\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","main.ts":"namespace aiCaptainRobot {\n    let step_time = 200\n\n    function right_forward () {\n        pins.digitalWritePin(DigitalPin.P16, 1)\n    }\n    function turnLeft () {\n        left_forward()\n        right_backward()\n    }\n    function right_backward () {\n        pins.digitalWritePin(DigitalPin.P0, 1)\n    }\n    function driveBackwards () {\n        left_backward()\n        right_backward()\n    }\n    function left_backward () {\n        pins.digitalWritePin(DigitalPin.P8, 1)\n    }\n    //% blockId=rightOneStep\n    //% block=\"right one step\"\n    export function rightOneStep () {\n        turnRight()\n        basic.pause(step_time)\n        all_stop()\n    }\n    //% blockId=leftOneStep\n    //% block=\"left one step\"\n    export function leftOneStep () {\n        turnLeft()\n        basic.pause(step_time)\n        all_stop()\n    }\n    //% blockId=backwardsOneStep\n    //% block=\"backward one step\"\n    export function backwardOneStep () {\n        driveBackwards()\n        basic.pause(step_time)\n        all_stop()\n    }\n\n    function turnRight () {\n        right_forward()\n        left_backward()\n    }\n    //% blockId=forwardwardsOneStep\n    //% block=\"forward one step\"\n    export function forwardOneStep () {\n        driveForward()\n        basic.pause(step_time)\n        all_stop()\n    }\n    function driveForward () {\n        left_forward()\n        right_forward()\n    }\n    function left_forward () {\n        pins.digitalWritePin(DigitalPin.P12, 1)\n    }\n    function all_stop () {\n        pins.digitalWritePin(DigitalPin.P12, 0)\n        pins.digitalWritePin(DigitalPin.P16, 0)\n        pins.digitalWritePin(DigitalPin.P8, 0)\n        pins.digitalWritePin(DigitalPin.P0, 0)\n    }\n\n}","pxt.json":"{\n    \"name\": \"ai-aptain-robot-extention\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v3.0.67\",\n        \"tag\": \"v3.0.67\",\n        \"commits\": \"https://github.com/microsoft/pxt-microbit/commits/b1dd6c3bcb9b2df57dfdd0bc4442971d81a1859d\",\n        \"target\": \"3.0.67\",\n        \"pxt\": \"6.0.39\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}